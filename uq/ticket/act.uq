ACT BookSheetPurchase (
    id ID,
) {
    IF not exists(SELECT a.xi FROM IxMySheet as a WHERE a.ix=$user AND a.xi=id) {
        RETURN;
    }
    WITH IxMySheet IX=$user XI=id DEL;
    QUEUE QueueStoreIn ADD id;
};

ACT BookSheetStoreIn ver 0.6 (
    id ID,
) {
    IF not exists(SELECT a.xi FROM IxMySheet as a WHERE a.ix=$user AND a.xi=id) {
        RETURN;
    }
    TABLE sourceSheets(KEY id ID);
    WITH IxMySheet IX=$user XI=id DEL;
    -- 下面记账
    FOR (VAR id ID, value VALUE, source ID, sourceSheet ID, item ID, quantity QUANTITY, price PRICE, amount AMOUNT
        OF SELECT a.id, a.value, a.source, a.sheet as sourceSheet, b.item, b.quantity, b.price, b.amount
            FROM DetailSource as a JOIN DetailQPA as b ON b.id=a.source
            WHERE a.sheet=id
            ORDER BY a.id ASC
    ) {
        INTO sourceSheets IGNORE SELECT sourceSheet as id;
        WITH Done ID=source SET done+=value;
        VAR project ID = ID(Project new KEY type=ProjectType.Storage, item=item);
        VAR history ID;
        WITH History as a ID to history SET a.project=project, a.value=value, a.ref=id;
    }
    FOR (VAR id ID OF SELECT a.id FROM sourceSheets as a) {
        IF (SELECT sum(b.quantity-c.done)
                FROM DetailSource as a
                    JOIN DetailQPA as b ON b.id=a.source
                    JOIN Done as c on c.id=b.id 
                WHERE a.sheet=id
           )=0
        {
            QUEUE QueueStoreIn Del id;
        }
    }
};
